---
- name: download docker binary
  get_url:
    url: "{{ docker_bin_tar_url }}"
    dest: /tmp

- name: unarchive docker tar
  unarchive:
    remote_src: yes
    src: /tmp/docker-{{ docker_version }}.tgz
    dest: /tmp

- name: move docker to PATH
  copy:
    remote_src: yes
    src: /tmp/docker/{{ item }}
    dest: /usr/bin
    owner: root
    group: root
    mode: 0755
  with_items:
    - docker
    - docker-containerd
    - docker-containerd-ctr
    - docker-containerd-shim
    - dockerd
    - docker-init
    - docker-proxy
    - docker-runc

- name: create /lib/systemd/system/docker.service
  template:
    src: docker.service.j2
    dest: /lib/systemd/system/docker.service
    owner: root
    group: root
    mode: 0644

- name: create docker directory
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_items: 
    - { dir: /etc/docker, mode: '0700' }
    - { dir: /etc/systemd/system/docker.service.d, mode: '0700' }
    - { dir: /var/lib/docker, mode: '0755' }

- name: docker options
  template:
    src: tune.conf.j2
    dest: /etc/systemd/system/docker.service.d/tune.conf
    owner: root
    group: root
    mode: 0644

- name: thinpool
  include_tasks: thinpool.yml
  when: THINPOOL_DISKS != ''

- name: /dev/mapper/{{ VG_NAME }}-{{ THINPOOL_NAME }} exists ?
  stat:
    path: /dev/mapper/{{ VG_NAME }}-{{ THINPOOL_NAME }}
  register: thinpool_exists

- name: docker_config_thinpool
  include_tasks: docker_config_thinpool.yml
  when: thinpool_exists.stat.exists

- name: docker_config_no_thinpool
  include_tasks: docker_config_no_thinpool.yml
  when: not thinpool_exists.stat.exists

- name: systemd daemon-reload
  systemd:
    daemon-reload: yes

- name: start docker
  service:
    name: docker
    state: started
    enabled: yes
